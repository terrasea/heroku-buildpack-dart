#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e
#set -x
unset GIT_DIR

CURRENT_DIR=`dirname $0`

mkdir -p "$1" "$2"
BUILD_DIR=$(cd "$1/" && pwd)
CACHE_DIR=$(cd "$2/" && pwd)

# this variable is used by pub to determine the package install location
PUB_CACHE="/app/pub-cache"
export PUB_CACHE
mkdir -p $PUB_CACHE

function message {
  echo "$1"
  sync
}

MACHINE=`uname -a`
message "-----> Welcome, this machine is: $MACHINE"

if [ -z "$DART_SDK_URL" ]; then
    message "ERROR: you must specify DART_SDK_URL to a Dart SDK for Linux. See README for this buildpack."
    exit 1
fi

cd $BUILD_DIR

message "-----> Installing Dart VM via URL $DART_SDK_URL"

cd $CACHE_DIR
curl -L $DART_SDK_URL -o - | tar xzf -

message "-----> Copy Dart binaries to app root"
cp -r $CACHE_DIR/dart-sdk $BUILD_DIR

# we need to copy the sdk into the /app folder in order for the sdk libraries
# to be referenced correctly
# reason being that the /tmp folder will be deleted after build, and /app
# resembles the location of the ready built app
cp -r $CACHE_DIR/dart-sdk /app

chmod +x /app/dart-sdk/bin/*

DART_BIN=`ls -l /app/dart-sdk/bin/dart`
message "-----> Dart cmd found at $DART_BIN"

CAN_DART_RUN=`/app/dart-sdk/bin/dart --version`
message "-----> Dart reports version: $CAN_DART_RUN"

message "-----> Install packages"

cd $BUILD_DIR

for filename in `find . -name pubspec.yaml | grep -v dart-sdk | grep -v pub-cache`; do
    pub_dir=`dirname $filename`
    message "*** Found pubspec.yaml in $BUILD_DIR/$pub_dir"
    cd $BUILD_DIR/$pub_dir

    #start pub from the /app folder to have correct symlink paths
    /app/dart-sdk/bin/pub get

    listing=`ls -l $PUB_CACHE`
    message "------> $listing"
done

# I think heroku deletes all the contents of /app and replaces it with
# whatever is in $BUILD_DIR, so copy over the pub-cache. Why not put it in
# $BUILD_DIR in the first place? because we need symlinks setup correctly.
cp -R $PUB_CACHE $BUILD_DIR/pub-cache
message `ls -l $BUILD_DIR/pub-cache`

# run Dart build script
cd $BUILD_DIR
#if [ -e "build.dart" ]; then
#	message "-----> Run Dart build script (build.dart --deploy)"
#	/app/dart-sdk/bin/dart --package-root=packages/ build.dart --deploy
#fi
pub build

